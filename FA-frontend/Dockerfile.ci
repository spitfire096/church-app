FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with fallback options
RUN npm config set legacy-peer-deps true && \
    npm install --no-audit --no-fund || \
    npm install --legacy-peer-deps --no-audit --no-fund

# Copy the rest of the application
COPY . .

# Build the application with error handling
RUN npm run build || \
    (echo "Retrying build with increased memory" && \
     export NODE_OPTIONS="--max-old-space-size=4096" && \
     npm run build)

# Production image
FROM node:18-alpine
WORKDIR /app

# Copy only necessary files from builder
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/public ./public

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Start the application
CMD ["npm", "start"] 